# pip install brawlstats

import brawlstats

client = brawlstats.Client("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiIsImtpZCI6IjI4YTMxOGY3LTAwMDAtYTFlYi03ZmExLTJjNzQzM2M2Y2NhNSJ9.eyJpc3MiOiJzdXBlcmNlbGwiLCJhdWQiOiJzdXBlcmNlbGw6Z2FtZWFwaSIsImp0aSI6IjNkNmQ1Y2Y4LWM5N2EtNDA1Yi04N2JkLTU0NzYwNjA2YTgxNSIsImlhdCI6MTc1ODU2NzQ1NCwic3ViIjoiZGV2ZWxvcGVyL2UzOTU5YzY3LWJlN2YtYWFiMS1mNDRlLTg1ODRhOTg0YWU5MiIsInNjb3BlcyI6WyJicmF3bHN0YXJzIl0sImxpbWl0cyI6W3sidGllciI6ImRldmVsb3Blci9zaWx2ZXIiLCJ0eXBlIjoidGhyb3R0bGluZyJ9LHsiY2lkcnMiOlsiMTI4LjEyNy4xMjcuNDEiXSwidHlwZSI6ImNsaWVudCJ9XX0.wyypdUvE4nIogqYtmNr7px0H0agW2xxknPSvG6Lqn-63dm2o1G-iCYtolp_gx6pzaedZamIPSsR2_remxjx0zg") # type: ignore

profile = client.get_profile("#90PGJRQCQ")

print('------ –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ------')
print(f"{profile.name} | {profile.tag}\n") 
print(f"–¶–≤–µ—Ç –Ω–∏–∫–∞: {profile.name_color}")
print(f"–ö—É–±–∫–∏: {profile.trophies} (–†–µ–∫–æ—Ä–¥: {profile.highest_trophies})")
print(f"–£—Ä–æ–≤–µ–Ω—å: {profile.exp_level} (–û–ø—ã—Ç: {profile.exp_points})")

print('\n------ –†–ï–ñ–ò–ú–´ ------')
print(f"–ü–æ–±–µ–¥—ã 3 –Ω–∞ 3: {profile.x3vs3_victories}")
print(f"–û–¥–∏–Ω–æ—á–Ω—ã–µ –ø–æ–±–µ–¥—ã: {profile.solo_victories}")
print(f"–ü–∞—Ä–Ω—ã–µ –ø–æ–±–µ–¥—ã: {profile.duo_victories}")

print('\n------ –ë–û–ô–¶–´ ------')
# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–æ–π—Ü–æ–≤ –∏–≥—Ä–æ–∫–∞
brawlers = profile.brawlers

# –°–æ—Ä—Ç–∏—Ä—É–µ–º –±–æ–π—Ü–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫—É–±–∫–æ–≤ (–æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É)
brawlers_sorted = sorted(brawlers, key=lambda x: x.trophies, reverse=True)

print(f"–í—Å–µ–≥–æ –±–æ–π—Ü–æ–≤: {len(brawlers)}")

# –†–ê–°–ß–ï–¢ –ü–†–û–ì–†–ï–°–°–ê –ü–†–û–ö–ê–ß–ö–ò
COINS_PER_MAX_BRAWLER = 17765  # –ë–∞–∑–æ–≤–∞—è: —É—Ä–æ–≤–Ω–∏ + 1 –≥–∞–¥–∂–µ—Ç(1000) + 1 –ø–∞—Å—Å–∏–≤–∫–∞(2000) + 2 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è(2000) + –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥(5000)
COINS_PER_MAX_BRAWLER_FULL = 24765  # –ü–æ–ª–Ω–∞—è: + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 1 –≥–∞–¥–∂–µ—Ç(1000) + 1 –ø–∞—Å—Å–∏–≤–∫–∞(2000) + 3 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è(3000)

# –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –≤–µ—Å—å –∞–∫–∫–∞—É–Ω—Ç (–¥–ª—è 103 –±–æ–π—Ü–æ–≤)
TOTAL_COINS_FULL_ACCOUNT = 103 * COINS_PER_MAX_BRAWLER_FULL
TOTAL_POWER_POINTS_FULL_ACCOUNT = 336600  # 103 –±–æ–π—Ü–∞ √ó 3270 –æ—á–∫–æ–≤ —Å–∏–ª—ã

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
maxed_brawlers = 0
total_coins_spent = 0
total_coins_spent_full = 0
total_power_points_spent = 0

# –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞–¥–∂–µ—Ç–æ–≤, –∑–≤—ë–∑–¥–Ω—ã—Ö —Å–∏–ª –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π
total_gadgets = 0
total_star_powers = 0
total_gears = 0

for brawler in brawlers:
    # –†–∞—Å—á–µ—Ç –∑–∞—Ç—Ä–∞—Ç –Ω–∞ —É—Ä–æ–≤–Ω–∏ (1-11 —É—Ä–æ–≤–µ–Ω—å = 11765 –º–æ–Ω–µ—Ç)
    if brawler.power == 1:
        coins_for_levels = 0
    else:
        coins_for_levels = min(11765, (brawler.power - 1) * (11765 / 10))
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π (gears)
    gears_list = getattr(brawler, 'gears', [])
    gears_count = len(gears_list) if hasattr(gears_list, '__len__') else 0
    
    # –ë–ê–ó–û–í–ê–Ø –ø—Ä–æ–∫–∞—á–∫–∞: —É—Ä–æ–≤–Ω–∏ + 1 –≥–∞–¥–∂–µ—Ç + 1 –ø–∞—Å—Å–∏–≤–∫–∞ + 2 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è + –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥
    gadgets_count_base = min(len(brawler.gadgets), 1)  # –¢–æ–ª—å–∫–æ 1 –≥–∞–¥–∂–µ—Ç –¥–ª—è –±–∞–∑–æ–≤–æ–π
    star_powers_count_base = min(len(brawler.star_powers), 1)  # –¢–æ–ª—å–∫–æ 1 –ø–∞—Å—Å–∏–≤–∫–∞ –¥–ª—è –±–∞–∑–æ–≤–æ–π
    gears_count_base = min(gears_count, 2)  # –ú–∞–∫—Å–∏–º—É–º 2 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    
    # –°—Ç–æ–∏–º–æ—Å—Ç—å –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–∫–∞—á–∫–∏
    coins_spent_base = coins_for_levels
    coins_spent_base += gadgets_count_base * 1000  # 1 –≥–∞–¥–∂–µ—Ç
    coins_spent_base += star_powers_count_base * 2000  # 1 –ø–∞—Å—Å–∏–≤–∫–∞  
    coins_spent_base += gears_count_base * 1000  # 2 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è (–ø–æ 1000 –∫–∞–∂–¥–æ–µ)
    
    # –ï—Å–ª–∏ –±–æ–µ—Ü 11 —É—Ä–æ–≤–Ω—è, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥–∞ (5000)
    if brawler.power == 11:
        coins_spent_base += 5000
    
    total_coins_spent += min(coins_spent_base, COINS_PER_MAX_BRAWLER)
    
    # –ü–û–õ–ù–ê–Ø –ø—Ä–æ–∫–∞—á–∫–∞: –≤—Å—ë —Ç–æ –∂–µ —Å–∞–º–æ–µ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 1 –≥–∞–¥–∂–µ—Ç + 1 –ø–∞—Å—Å–∏–≤–∫–∞ + 3 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    gadgets_count_full = min(len(brawler.gadgets), 2)  # –í—Å–µ 2 –≥–∞–¥–∂–µ—Ç–∞
    star_powers_count_full = min(len(brawler.star_powers), 2)  # –í—Å–µ 2 –ø–∞—Å—Å–∏–≤–∫–∏
    gears_count_full = min(gears_count, 5)  # –í—Å–µ 5 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π
    
    coins_spent_full = coins_for_levels
    coins_spent_full += gadgets_count_full * 1000  # 2 –≥–∞–¥–∂–µ—Ç–∞
    coins_spent_full += star_powers_count_full * 2000  # 2 –ø–∞—Å—Å–∏–≤–∫–∏
    coins_spent_full += gears_count_full * 1000  # 5 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π
    
    # –ï—Å–ª–∏ –±–æ–µ—Ü 11 —É—Ä–æ–≤–Ω—è, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥–∞ (5000)
    if brawler.power == 11:
        coins_spent_full += 5000
    
    total_coins_spent_full += min(coins_spent_full, COINS_PER_MAX_BRAWLER_FULL)
    
    total_gadgets += len(brawler.gadgets)
    total_star_powers += len(brawler.star_powers)
    total_gears += gears_count
    
    # –†–∞—Å—á–µ—Ç –æ—á–∫–æ–≤ —Å–∏–ª—ã
    power_points_spent = min(3270, (brawler.power - 1) * 327)
    total_power_points_spent += power_points_spent
    
    if brawler.power == 11:
        maxed_brawlers += 1

# –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–∫–∞—á–∫–∏
total_coins_needed = len(brawlers) * COINS_PER_MAX_BRAWLER
coins_remaining = max(0, total_coins_needed - total_coins_spent)
progress_percentage = min(100, (total_coins_spent / total_coins_needed) * 100) if total_coins_needed > 0 else 0

# –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏
total_coins_needed_full = len(brawlers) * COINS_PER_MAX_BRAWLER_FULL
coins_remaining_full = max(0, total_coins_needed_full - total_coins_spent_full)
progress_percentage_full = min(100, (total_coins_spent_full / total_coins_needed_full) * 100) if total_coins_needed_full > 0 else 0

# –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—á–∫–æ–≤ —Å–∏–ª—ã
power_points_remaining = max(0, TOTAL_POWER_POINTS_FULL_ACCOUNT - total_power_points_spent)
power_points_progress = min(100, (total_power_points_spent / TOTAL_POWER_POINTS_FULL_ACCOUNT) * 100) if TOTAL_POWER_POINTS_FULL_ACCOUNT > 0 else 0

print(f"\n--- –ü–†–û–ì–†–ï–°–° –ü–†–û–ö–ê–ß–ö–ò ---")
print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–∫–∞—á–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤: {maxed_brawlers}/{len(brawlers)}")
print(f"–í—Å–µ–≥–æ –≥–∞–¥–∂–µ—Ç–æ–≤: {total_gadgets}/{len(brawlers) * 2}")
print(f"–í—Å–µ–≥–æ –∑–≤—ë–∑–¥–Ω—ã—Ö —Å–∏–ª: {total_star_powers}/{len(brawlers) * 2}")
print(f"–í—Å–µ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π: {total_gears}/{len(brawlers) * 5}")

print(f"\n‚óè –ë–ê–ó–û–í–ê–Ø –ü–†–û–ö–ê–ß–ö–ê (–¥–æ 11 —É—Ä–æ–≤–Ω—è + 1 –≥–∞–¥–∂–µ—Ç + 2 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è + 1 –ø–∞—Å—Å–∏–≤–∫–∞ + –≥–∏–ø–µ—Ä–∑–∞—Ä—è–¥):")
print(f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –º–æ–Ω–µ—Ç: ~{int(total_coins_spent):,} –∏–∑ {int(total_coins_needed):,}")
print(f"–û—Å—Ç–∞–ª–æ—Å—å –º–æ–Ω–µ—Ç: ~{int(coins_remaining):,}")
print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {progress_percentage:.1f}%")

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–∫–∞—á–∫–∏
bar_length = 20
filled_length = int(bar_length * progress_percentage / 100)
bar = '‚ñà' * filled_length + '‚ñë' * (bar_length - filled_length)
print(f"[{bar}] {progress_percentage:.1f}%")

print(f"\n‚óè –ü–û–õ–ù–ê–Ø –ü–†–û–ö–ê–ß–ö–ê (11 —É—Ä. + –≥–∏–ø–µ—Ä + 2 –≥–∞–¥–∂–µ—Ç–∞ + 2 –∑–≤.—Å–∏–ª—ã + 5 —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π):")
print(f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –º–æ–Ω–µ—Ç: ~{int(total_coins_spent_full):,} –∏–∑ {int(total_coins_needed_full):,}")
print(f"–û—Å—Ç–∞–ª–æ—Å—å –º–æ–Ω–µ—Ç: ~{int(coins_remaining_full):,}")
print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {progress_percentage_full:.1f}%")

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏
filled_length_full = int(bar_length * progress_percentage_full / 100)
bar_full = '‚ñà' * filled_length_full + '‚ñë' * (bar_length - filled_length_full)
print(f"[{bar_full}] {progress_percentage_full:.1f}%")

print(f"\n‚óè –û–ß–ö–ò –°–ò–õ–´:")
print(f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –æ—á–∫–æ–≤ —Å–∏–ª—ã: ~{int(total_power_points_spent):,} –∏–∑ {TOTAL_POWER_POINTS_FULL_ACCOUNT:,}")
print(f"–û—Å—Ç–∞–ª–æ—Å—å –æ—á–∫–æ–≤ —Å–∏–ª—ã: ~{int(power_points_remaining):,}")
print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {power_points_progress:.1f}%")

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—á–∫–æ–≤ —Å–∏–ª—ã
filled_length_pp = int(bar_length * power_points_progress / 100)
bar_pp = '‚ñà' * filled_length_pp + '‚ñë' * (bar_length - filled_length_pp)
print(f"[{bar_pp}] {power_points_progress:.1f}%")

print(f"\nüí° –î–õ–Ø –°–ü–†–ê–í–ö–ò:")
print(f"–ü–æ–ª–Ω–∞—è –ø—Ä–æ–∫–∞—á–∫–∞ –≤—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ ({len(brawlers)}/103 –±–æ–π—Ü–æ–≤):")
print(f"- –¢—Ä–µ–±—É–µ—Ç—Å—è –º–æ–Ω–µ—Ç: {TOTAL_COINS_FULL_ACCOUNT:,}")
print(f"- –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∫–æ–≤ —Å–∏–ª—ã: {TOTAL_POWER_POINTS_FULL_ACCOUNT:,}")
print(f"- –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –±–æ–π—Ü–∞: {COINS_PER_MAX_BRAWLER_FULL:,} –º–æ–Ω–µ—Ç")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º –±–æ–π—Ü–æ–≤
level_distribution = {}
for brawler in brawlers:
    level = brawler.power
    level_distribution[level] = level_distribution.get(level, 0) + 1

print(f"\n--- –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ë–û–ô–¶–û–í –ü–û –£–†–û–í–ù–Ø–ú ---")
for level in sorted(level_distribution.keys(), reverse=True):
    count = level_distribution[level]
    percentage = (count / len(brawlers)) * 100
    coins_for_level = min(11765, (level - 1) * (11765 / 10))
    print(f"–£—Ä–æ–≤–µ–Ω—å {level}: {count} –±–æ–π—Ü–æ–≤ ({percentage:.1f}%) | ~{int(coins_for_level):,} –º–æ–Ω–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–∏")

print("\n–¢–æ–ø-5 –±–æ–π—Ü–æ–≤ –ø–æ –∫—É–±–∫–∞–º: (–≠—Ç–æ—Ç —Å–µ–∑–æ–Ω)")
for i, brawler in enumerate(brawlers_sorted[:5], 1):
    print(f"{i}. {brawler.name}: {brawler.trophies} –∫—É–±–∫–æ–≤ | –£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã {brawler.power}")

if brawlers:
    best_brawler = brawlers_sorted[0]
    print(f"\n--- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - {best_brawler.name} ---")
    print(f"–ö—É–±–∫–∏ (–º–∞–∫—Å.): {best_brawler.trophies} ({best_brawler.highest_trophies})")
    print(f"–£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã: {best_brawler.power}")
    print(f"–†–∞–Ω–≥: {best_brawler.rank}")
    print(f"–ó–≤—ë–∑–¥–Ω—ã–µ —Å–∏–ª—ã: {len(best_brawler.star_powers)}/2")
    print(f"–ì–∞–¥–∂–µ—Ç—ã: {len(best_brawler.gadgets)}/2")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–π –¥–ª—è –ª—É—á—à–µ–≥–æ –±–æ–π—Ü–∞
    best_brawler_gears = getattr(best_brawler, 'gears', [])
    best_brawler_gears_count = len(best_brawler_gears) if hasattr(best_brawler_gears, '__len__') else 0
    print(f"–°–Ω–∞—Ä—è–∂–µ–Ω–∏—è: {best_brawler_gears_count}/5")
    
    # –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–∫–∞—á–∫–∏ —ç—Ç–æ–≥–æ –±–æ–π—Ü–∞
    if best_brawler.power == 1:
        coins_spent = 0
    else:
        coins_spent = min(11765, (best_brawler.power - 1) * (11765 / 10))
    
    coins_spent += min(len(best_brawler.gadgets), 1) * 1000
    coins_spent += min(len(best_brawler.star_powers), 1) * 2000
    coins_spent += min(best_brawler_gears_count, 2) * 1000
    
    if best_brawler.power == 11:
        coins_spent += 5000
    
    coins_spent_full = coins_spent
    coins_spent_full += max(0, min(len(best_brawler.gadgets) - 1, 1)) * 1000
    coins_spent_full += max(0, min(len(best_brawler.star_powers) - 1, 1)) * 2000
    coins_spent_full += max(0, min(best_brawler_gears_count - 2, 3)) * 1000
    
    brawler_progress = min(100, (coins_spent / COINS_PER_MAX_BRAWLER) * 100)
    brawler_progress_full = min(100, (coins_spent_full / COINS_PER_MAX_BRAWLER_FULL) * 100)
    
    print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–∫–∞—á–∫–∏: {brawler_progress:.1f}%")
    print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏: {brawler_progress_full:.1f}%")

print("\n------ –ö–õ–£–ë ------")
if profile.club:
    club = client.get_club(profile.club.tag)
    
    club_type = club.type
    if club_type == "open":
        club_type = "–û—Ç–∫—Ä—ã—Ç—ã–π"
    elif club_type == "inviteOnly":
        club_type = "–ü–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é"
    elif club_type == "closed":
        club_type = "–ó–∞–∫—Ä—ã—Ç—ã–π"
    
    print(f"{club.name} | {club.tag}\n")
    print(f"–¢–∏–ø: {club_type}")
    print(f"–ö—É–±–∫–∏: {club.trophies} (–¢—Ä–µ–±. –¥–ª—è –≤—Ö–æ–¥–∞: {club.required_trophies})")
    print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {len(club.members)}/30")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {club.description}\n")

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    def sort_members(member):
        role_priority = {"president": 4, "vicePresident": 3, "senior": 2, "member": 1}
        return (role_priority.get(member.role, 0), -member.trophies)
    
    members_sorted = sorted(club.members, key=sort_members, reverse=True)

    print("--- –£—á–∞—Å—Ç–Ω–∏–∫–∏ (–¢–æ–ø-5 –ø–æ –∫—É–±–∫–∞–º) ---")
    role_translation = {"president": "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç", "vicePresident": "–í–∏—Ü–µ-–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç", "senior": "–í–µ—Ç–µ—Ä–∞–Ω", "member": "–£—á–∞—Å—Ç–Ω–∏–∫"}
    
    for member in members_sorted[:5]:
        role = role_translation.get(member.role, member.role)
        print(f"{member.name} - {role} - {member.trophies} –∫—É–±–∫–æ–≤")

    print("\n--- –í—Å–µ –£—á–∞—Å—Ç–Ω–∏–∫–∏ ---")
    for member in members_sorted:
        role = role_translation.get(member.role, member.role)
        print(f"{member.name} - {role} - {member.trophies} –∫—É–±–∫–æ–≤")
